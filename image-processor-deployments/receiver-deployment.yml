kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"receiver:latest","namespace":"groundbreaker-edgefac1"},"fieldPath":"spec.template.spec.containers[?(@.name==\"receiver\")].image","pause":"false"}]
  name: receiver
  namespace: groundbreaker-edgefac1
  labels:
    app: receiver
    app.kubernetes.io/component: receiver
    app.kubernetes.io/instance: receiver
    app.kubernetes.io/name: receiver
    app.kubernetes.io/part-of: groundbreaker-edgfac1
    app.openshift.io/runtime: python
    app.openshift.io/runtime-namespace: groundbreaker-edgefac1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: receiver
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: receiver
        deployment: receiver
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      volumes:
        - name: images
          persistentVolumeClaim:
            claimName: images
      containers:
        - name: receiver
          image: >-
            image-registry.openshift-image-registry.svc:5000/groundbreaker-edgefac1/receiver@sha256:f7dc022577c91da230bb30f44bbb4155213ea77e8ba36a11082d3a7f1188c1c6
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: images
              mountPath: /images
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
