apiVersion: apps/v1
kind: Deployment
metadata:
  name: edgefac2-proxy
  namespace: edgefac2-proxy
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: deployment
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: deployment
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: edgefac2-proxy
            topologyKey: kubernetes.io/hostname
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/edgefac2-proxy/nginx:latest
        name: nginx
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 0
          capabilities:
            add:
            - NET_BIND_SERVICE
        resources:
          requests:
            cpu: 100m
            memory: 32Mi
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 6443
        #     scheme: HTTP
        args:
          - nginx
          - -g
          - daemon off;
        volumeMounts:
          - name: config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          # - name: config
          #   mountPath: /opt/app-root/etc/nginx.default.d/healthz.conf
          #   subPath: healthz.conf

          # - name: frontend-cert
          #   mountPath: /opt/app-root/etc/server-cert

      volumes:
      - name: config
        configMap:
          name: edgefac2-proxy-config

      # - name: frontend-cert
      #   secret:
      #     secretName: edgefac2-proxy-cert
